image: alpine:latest

variables:
  CI_DEBUG_TRACE: "false"
  CODE_QUALITY_DISABLED: "true"
  DEPENDENCY_SCANNING_DISABLED: "true"
  PERFORMANCE_DISABLED: "true"
  POSTGRES_ENABLED: "false"
  TEST_DISABLED: "true"
  COLLECTION: collection.json
  COLLECTION_VARS: collection_vars.json
  COLLECTION_SCENARIOS: collection_scenarios.json

stages:
  - build
  - quality gate
  - test
  - deploy
  - review
  - dast
  - staging
  - canary
  - validation
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

include:
  - template: Auto-DevOps.gitlab-ci.yml

postman:
  stage: validation
  image: 
    name: postman/newman
    entrypoint: ["/bin/sh", "-c"]
  allow_failure: true
  script:
    - export CI_ENVIRONMENT_URL=$(cat environment_url.txt)
    - sed -i 's#%%URL%%#'"$CI_ENVIRONMENT_URL"'#g' $COLLECTION_VARS
    - node https://raw.githubusercontent.com/vidalink/gitlab-ci-yaml/master/convert_test_cases.js $COLLECTION_SCENARIOS converted_scenarios.json
    - newman --version
    - newman run $COLLECTION -e $COLLECTION_VARS --folder Current -d converted_scenarios.json
  only:
    refs:
      - branches
  except:
    refs:
      - master
    variables:
      - $POSTMAN_DISABLED

quality:
  stage: quality gate
  image:
    name: microsoft/dotnet:2.1-sdk-alpine
    entrypoint: ["/bin/sh", "-c"]
  allow_failure: true
  script:
    - apk add --no-cache --update openjdk8-jre nss
    - dotnet tool install --global dotnet-sonarscanner
    - export PATH=${PATH}:/root/.dotnet/tools
    - dotnet test ${PROJECT_TEST_PATH} /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
    - dotnet sonarscanner begin /k:"${SONAR_K}"  /d:sonar.host.url="${SONAR_HOST_URL}" /d:sonar.language="cs" /d:sonar.exclusions="**/bin/**/*,**/obj/**/*" /d:sonar.login="${SONAR_LOGIN}"  /d:sonar.cs.opencover.reportsPaths="${PROJECT_TEST_PATH}/coverage.opencover.xml" /d:sonar.coverage.exclusions="**Tests*.cs"
    - dotnet restore --configfile ${PROJECT_API_PATH}/nuget.config ${PROJECT_API_PATH}
    - dotnet restore --configfile ${PROJECT_TEST_PATH}/nuget.config ${PROJECT_TEST_PATH}
    - dotnet build ${PROJECT_SLN_PATH}
    - dotnet sonarscanner end /d:sonar.login=${SONAR_LOGIN}
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - SWAGGERHUB
    variables:
      - $SONAR_DISABLED
