image: alpine:latest

before_script:
  - if [ $PUBLIC ]; then export AUTH='--allow-unauthenticated'; else export AUTH=''; fi
  - if [ ! $TIMEOUT ]; then export TIMEOUT='2m'; fi
  - echo "$AUTH"

stages:
  - build
  - test
  - production

build:
  stage: build
  environment: production
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker build -t ${CI_PROJECT_PATH_SLUG} .
  only:
    refs:
      - master
    variables:
      - $BUILD_DOCKER_IMAGE

test:
  stage: test
  image: google/cloud-sdk:latest
  environment: test
  script:
    - printenv
    - export TMP_FILE=/tmp/${CI_PIPELINE_ID}.json
    - export TAG=gcr.io/${CLOUDSDK_CORE_PROJECT}/test-${CI_PROJECT_PATH_SLUG}:${CI_PIPELINE_ID}
    - echo ${GCLOUD_SERVICE_ACCOUNT} > ${TMP_FILE}
    - gcloud auth activate-service-account --key-file ${TMP_FILE}
    - gcloud config set project ${CLOUDSDK_CORE_PROJECT}
    - gcloud builds submit --tag ${TAG}
    - gcloud beta run services add-iam-policy-binding test-${CI_PROJECT_PATH_SLUG} --member="allUsers" --role="roles/run.invoker" --region ${GCLOUD_PROJECT_REGION}
    - gcloud beta run deploy test-${CI_PROJECT_PATH_SLUG} --image ${TAG} --platform managed --region ${GCLOUD_PROJECT_REGION} ${AUTH} ${TIMEOUT}
  only:
    variables:
      - $GCLOUD_PROJECT_REGION

production:
  stage: production
  image: google/cloud-sdk:latest
  environment: production
  script:
    - printenv
    - export TMP_FILE=/tmp/${CI_PIPELINE_ID}.json
    - export TAG=gcr.io/${CLOUDSDK_CORE_PROJECT}/${CI_PROJECT_PATH_SLUG}:${CI_PIPELINE_ID}
    - echo ${GCLOUD_SERVICE_ACCOUNT} > ${TMP_FILE}
    - gcloud auth activate-service-account --key-file ${TMP_FILE}
    - gcloud config set project ${CLOUDSDK_CORE_PROJECT}
    - gcloud builds submit --tag ${TAG}
    - gcloud beta run services add-iam-policy-binding ${CI_PROJECT_PATH_SLUG} --member="allUsers" --role="roles/run.invoker" --region ${GCLOUD_PROJECT_REGION}
    - gcloud beta run deploy ${CI_PROJECT_PATH_SLUG} --image ${TAG} --platform managed --region ${GCLOUD_PROJECT_REGION} ${AUTH} ${TIMEOUT}
  only:
    refs:
      - master
    variables:
      - $GCLOUD_PROJECT_REGION
